{
  // Configuration for JavaScript files
  "extends": ["next", "airbnb-base", "plugin:prettier/recommended"],
  "rules": {
    "prettier/prettier": ["off"],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-shadow": "off",
    "radix": "off",
    "func-names": "off",
    "import/order": "off",
    "no-underscore-dangle": "off",
    "no-promise-executor-return": "off",
    "consistent-return": "off",
    "no-use-before-define": "off",
    "no-param-reassign": "off",
    "no-else-return": "off",
    "no-plusplus": "off",
    "prefer-template": "off",
    "spaced-comment": "off",
    "import/no-cycle": "off",
    "import/no-named-as-default-member": "off",
    "no-await-in-loop": "off",
    "no-lonely-if": "off",
    "no-nested-ternary": "off"
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "tailwindcss",
        "react-hooks"
      ],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb-typescript",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": [
          0,
          {
            "singleQuote": true
          }
        ],
        "react-hooks/exhaustive-deps": "warn", // Disable exaustive deps because is gives error on useEffect if not all depdendencies are addes, which most of the times doesnt make sense
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "jsx-a11y/anchor-is-valid": "off", // Next.js use his own internal link system
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "class-methods-use-this": "off", // _document.tsx use render method without `this` keyword
        "tailwindcss/no-custom-classname": "off", // Disabled otherwise nightmare to allow each custom tailwind classes
        "tailwindcss/classnames-order": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ],
        "@typescript-eslint/no-shadow": "off",
        "radix": "off",
        "import/extensions": "off",
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": [
              "!**/*.spec.ts(x)",
              "!**/*.test.ts(x)",
              "!**/*.stories.ts(x)",
              "!**/*.config.js",
              "!**/*.setup.ts"
            ]
          }
        ],
        "no-restricted-exports": "off",
        "react/jsx-filename-extension": "off",
        "no-restricted-syntax": "off",
        "@next/next/no-img-element": "off"
      }
    }
  ]
}
